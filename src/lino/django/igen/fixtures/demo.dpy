#coding: utf8
from lino.django.igen.models import *
from lino.django.utils.dataserializer import ModelBuilder

language_builder = ModelBuilder(Language,"id name")
country_builder = ModelBuilder(Country,"isocode name")
shippingmode_builder = ModelBuilder(ShippingMode,"name")
paymentterm_builder = ModelBuilder(PaymentTerm,"name")

productcat_builder = ModelBuilder(ProductCat,"name")
product_builder = ModelBuilder(Product,"name price cat")


#~ def add_instance(model,fieldnames,*args,**kw):
    #~ if type(fieldnames) == str:
        #~ fieldnames = fieldnames.split()
    #~ i = 0
    #~ kw = {}
    #~ for a in args:
        #~ kw[fieldnames[i]] = a
    #~ instance = model(**kw).save()
    #~ _objects.append(instance)
    #~ return instance
    

#~ def add_language(*args,**kw):
    #~ return add_instance(Language,"id name",*args,**kw)
#~ def add_country(*args,**kw):
    #~ return add_instance(Country,"isocode name",*args,**kw)
#~ def add_shippingmode(*args,**kw):
    #~ return add_instance(ShippingMode,"name",*args,**kw)
#~ def add_paymentterm(*args,**kw):
    #~ return add_instance(PaymentTerm,"name",*args,**kw)
    
contact_builder = ModelBuilder(Contact,fieldnames="""
      id
      firstName
      lastName
      title
      companyName
      nationalId
      vatId
      addr1
      addr2
      country
      city
      zipCode
      region
      email
      url
      phone
      gsm
      vatExempt
      itemVat
      language
      paymentTerm
      remarks
    """)
    
   
invoice_builder = ModelBuilder(Invoice,
    "number customer creation_date payment_term shipping_mode")

order_builder = ModelBuilder(Invoice,
    "number customer creation_date payment_term shipping_mode")
  
docitem_builder = ModelBuilder(DocItem,
    "document product qty")
  

def objects():

    yield language_builder.build('et','Estonian')
    yield language_builder.build('en','English')
    yield language_builder.build('de','German')


    yield country_builder.build('ee',"Estonia")
    yield country_builder.build('be',"Belgium")
    yield country_builder.build('de',"Germany")
    yield country_builder.build('fr',"France")


    yield shippingmode_builder.build("cash and carry")
    yield shippingmode_builder.build("regular mail")

    yield paymentterm_builder.build(u"sularahas")
    yield paymentterm_builder.build(u"7 päeva neto")
        
    s = u"""    
    1||||Minu Firma OÜ|||||ee||||||||0|0|et|2|
    2|Luc|Saffre|Mr.||||Rummajaani talu|Vana-Vigala küla|ee|Vigala vald|78003|Raplamaa|luc.saffre@gmx.net||||0|0|et||
    3|Andreas|Arens|Herrn||||Vervierser Straße 12||be|Eupen|4700||||||0|0|de||
    4|Alfons|Ausdemwald|Herrn|Bäckerei Ausdemwald|||Vervierser Straße 45||be|Eupen|4700||||||0|0|de||
    5|Bernard|Bodard|Dr.||||rue de la Loi 17||be|Welkenraedt|4840||||||0|0|fr||
    6||||Donderweer bv|||Wolfgangamadeusplaats 1-5||nl|Sneek|8601 WB||||||0|0|nl||
    7|Jean|Dupont|Mr||||71, rue Neuve||fr|Prouvy|59121||||||0|0|fr||
    8|Emil|Eierschal|Herrn||||Eichenstr. 7||de|Erlangen|91056||||||0|0|de||
    9|Lisa|Lahm|Frau|Hans Flott & Co|||Dürener Str. 264-266||de|Aachen|52007||||||0|0|de||
    10|Bernd|Brecht|Herr|Bernd Brecht|||Eupener Str. 13||de|Aachen|52007||||||0|0|de||
    11|Jérôme|Jeanémart|Monsieur||||rue Haute||be|Welkenradt|4850||||||0|0|fr||
    12|Robin|Dubois|Monsieur||||rue des prés 5||be|Welkenradt|4850||||||0|0|fr||
    13|Denis|Duprez|Dr.||||rue des prés 9||be|Welkenradt|4850||||||0|0|fr||
    14|Karl|Keller|Herrn||||Bergstraße 5||be|Eupen|4700||||||0|0|de||
    100|Tõnu|Tamme||Mets ja Puu OÜ|||Sibula tee 1||ee|Maardu|74117|Harju|||||0|0|et||
    101|Karl|Kask|||||Nõmme tee 1|Kloogaranna küla|ee|Keila vald|76708|Harju|||||0|0|et||
    """

    for line in s.splitlines():
        if len(line.strip()) > 0:
            a = line.split('|')
            #print a
            yield contact_builder.build(*a)
        
        
    furniture = productcat_builder.build("Furniture")
    yield furniture
    #print "foo", furniture.id, furniture
        
    yield product_builder.build("Wooden table","199.99",1)
    yield product_builder.build("Wooden chair","99.99",1)
    yield product_builder.build("Metal table","129.99",1)
    yield product_builder.build("Metal chair","79.99",1)

    yield invoice_builder.build(1,2,"2008-10-29",2,1)
    yield docitem_builder.build(1,1,1)
    yield docitem_builder.build(1,2,4)
    
    yield invoice_builder.build(2,3,"2009-04-11",2,1)
    yield docitem_builder.build(2,3,1)
    yield docitem_builder.build(2,4,4)
    
    yield order_builder.build(3,4,"2009-04-12",2,1)
    yield docitem_builder.build(3,3,1)
    yield docitem_builder.build(3,4,4)
    
    yield invoice_builder.build(4,4,"2009-04-12",2,1)
    yield docitem_builder.build(4,3,1)
    yield docitem_builder.build(4,4,4)


