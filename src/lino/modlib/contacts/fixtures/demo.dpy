#coding: utf8
## Copyright 2009 Luc Saffre
## This file is part of the Lino project.
## Lino is free software; you can redistribute it and/or modify 
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
## Lino is distributed in the hope that it will be useful, 
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the 
## GNU General Public License for more details.
## You should have received a copy of the GNU General Public License
## along with Lino; if not, see <http://www.gnu.org/licenses/>.

#from lino.modlib.contacts import models as contacts
from lino.utils.instantiator import Instantiator
from lino import reports
contacts = reports.get_app('contacts')


#~ person = Instantiator(contacts.Person,fieldnames="""
      #~ id
      #~ first_name
      #~ last_name
      #~ title
      #~ company_name
      #~ national_id
      #~ vatId
      #~ addr1
      #~ addr2
      #~ country
      #~ city
      #~ zipCode
      #~ region
      #~ email
      #~ url
      #~ phone
      #~ gsm
      #~ language
      #~ remarks
    #~ """).build

#~ company = Instantiator(contacts.Company,fieldnames="""
      #~ id
      #~ company_name
      #~ national_id
      #~ vatId
      #~ addr1
      #~ addr2
      #~ country
      #~ city
      #~ zipCode
      #~ region
      #~ email
      #~ url
      #~ phone
      #~ gsm
      #~ language
      #~ remarks
    #~ """).build

#~ partner = Instantiator(contacts.Partner).build
   


def objects():
    company = Instantiator(contacts.Company,country='ee',language='et').build
    yield company(name=u'Minu Firma OÜ')
    yield company(name=u'Mets ja Puu OÜ')
    
    company = Instantiator(contacts.Company,"name zip_code city addr1",country='be',language='de').build
    yield company(u'Bäckerei Ausdemwald', '4700', 'Eupen',  u'Vervierser Straße 45')
    yield company(u'Bäckerei Mießen',     '4700', 'Eupen',  u'Gospert 103')
    yield company(u'Bäckerei Schmitz',    '4700', 'Eupen',  u'Aachener Straße 53')
    yield company(u'Garage Mergelsberg',  '4720', 'Kelmis', u'Kasinostraße 13')
    
    company = Instantiator(contacts.Company,country='nl',language='nl').build
    yield company(name=u'Donderweer bv')
    
    company = Instantiator(contacts.Company,country='de',language='de').build
    yield company(name=u'Hans Flott & Co')
    yield company(name=u'Bernd Brechts Bücherladen')
    
    person = Instantiator(contacts.Person,"first_name last_name",
                country='be',language='de',city='Eupen',zip_code='4700').build
    yield person(u'Andreas',  u'Arens')
    yield person(u'Annette',  u'Arens')
    yield person(u'Hans',     u'Altenberg')
    yield person(u'Alfons',   u'Ausdemwald')
    yield person(u'Laurent',  u'Bastiaensen')
    yield person(u'Charlotte',  u'Collard')
    yield person(u'Ulrike',  u'Charlier')
    yield person(u'Marc',  u'Chantraine')
    yield person(u'Daniel',   u'Dericum')
    yield person(u'Dorothée', u'Demeulenaere')
    yield person(u'Berta',    u'Ernst')
    yield person(u'Bernd',    u'Evertz')
    yield person(u'Eberhart', u'Evers')
    yield person(u'Daniel',   u'Emonts')
    yield person(u'Edgar',    u'Engels')
    yield person(u'Luc',      u'Faymonville')
    yield person(u'Gérard',   u'Gernegroß')
    yield person(u'Werner',   u'Groteclaes')
    yield person(u'Grete',    u'Hilgers')
    yield person(u'Hans',     u'Hilgers')
    yield person(u'Irene',    u'Ingels')
    yield person(u'Jérémy',   u'Jansen')
    yield person(u'Jean-Pierre', u'Jacob')
    yield person(u'Herbert', u'Johnen')
    yield person(u'Johannes', u'Jonas')
    yield person(u'Jan', u'Jousten')
    yield person(u'Karl', u'Kaivers')
    yield person(u'Guido', u'Lambertz')
    yield person(u'Luc', u'Laschet')
    yield person(u'Line', u'Lazarus')
    yield person(u'Josefine', u'Leffin')
    yield person(u'Marc', u'Malmendier')
    yield person(u'Leo', u'Meessen')
    yield person(u'Franz', u'Mießen')
    yield person(u'Marie-Louise', u'Meier')
    
    
    person = Instantiator(contacts.Person,"first_name last_name",
                country='be',language='de',city='Raeren',zip_code='4730').build
    yield person(u'Erich',    u'Emonts')
    yield person(u'Erwin',    u'Emontspool')
    yield person(u'Erna',     u'Emonts-Gast')
    yield person(u'Alfons',     u'Radermacher')
    yield person(u'Berta',     u'Radermacher')
    yield person(u'Christian',     u'Radermacher')
    yield person(u'Daniela',     u'Radermacher')
    yield person(u'Edgard',     u'Radermacher')
    yield person(u'Fritz',     u'Radermacher')
    yield person(u'Guido',     u'Radermacher')
    yield person(u'Hans',     u'Radermacher')
    yield person(u'Hedi',     u'Radermacher')
    yield person(u'Inge',     u'Radermacher')
    yield person(u'Jean',     u'Radermacher')
    
    
    person = Instantiator(contacts.Person,country='be',language='fr').build
    yield person(first_name=u'Bernard',last_name=u'Bodard',title='Dr.')
    yield person(first_name=u'Jean',last_name=u'Dupont')
    
    person = Instantiator(contacts.Person,country='be',language='nl').build
    yield person(first_name=u'Mark',last_name=u'Martelaer')
    yield person(first_name=u'Rik',last_name=u'Radermecker')
    yield person(first_name=u'Marie-Louise',last_name=u'Vandenmeulenbos')
    
    person = Instantiator(contacts.Person,country='de').build
    yield person(first_name=u'Emil',last_name=u'Eierschal')
    yield person(first_name=u'Lisa',last_name=u'Lahm')
    yield person(first_name=u'Bernd',last_name=u'Brecht')
    yield person(first_name=u'Karl',last_name=u'Keller')
    
    person = Instantiator(contacts.Person,country='fr').build
    yield person(first_name=u'Robin',last_name=u'Dubois')
    yield person(first_name=u'Denis',last_name=u'Denon')
    yield person(first_name=u'Jérôme',last_name=u'Jeanémart')
    
    person = Instantiator(contacts.Person,"first_name last_name",country='ee').build
    yield person(u'Aare',u'Aaresild')
    yield person(u'Ahti',u'Aaspere')
    yield person(u'Peeter',u'Bach')
    yield person(u'Tiina',u'Engelbert')
    yield person(u'Inge',u'Hallik')
    yield person(u'Harri',u'Hunt')
    yield person(u'Ingmar',u'Iliste')
    yield person(u'Jaan',u'Janno')
    yield person(u'Jaan',u'Jõgi')
    yield person(u'Tõnu',u'Tamm')
    yield person(u'Tiina',u'Türnpuu')
    yield person(u'Karl',u'Kask')
    
    partner = Instantiator(contacts.Partner).build
    
    for c in contacts.Company.objects.all():
        yield partner(company=c.pk)
        
    for p in contacts.Person.objects.all():
        yield partner(person=p.pk)
    
    s = u"""
    Aachener Straße
    Akazienweg
    Alter Malmedyer Weg
    Am Bahndamm
    Am Berg
    Am Waisenbüschchen
    Auenweg
    Auf dem Spitzberg
    Auf'm Rain
    August-Thonnar-Str.
    Bahnhofsgasse
    Bahnhofstraße
    Bellmerin
    Bennetsborn
    Bergkapellstraße
    Bergstraße
    Binsterweg
    Brabantstraße
    Buchenweg
    Edelstraße
    Euregiostraße
    Favrunpark
    Feldstraße
    Fränzel
    Gewerbestraße
    Gospert
    Gülcherstraße
    Haagenstraße
    Haasberg
    Haasstraße
    Habsburgerweg
    Heidberg
    Heidgasse
    Heidhöhe
    Herbesthaler Straße
    Hisselsgasse
    Hochstraße
    Hook
    Hostert
    Hufengasse
    Hugo-Zimmermann-Str.
    Hütte
    Hütterprivatweg
    Im Peschgen
    In den Siepen
    Industriestraße
    Johannesstraße
    Judenstraße
    Kaperberg
    Kaplan-Arnolds-Str.
    Karl-Weiß-Str.
    Kehrweg
    Kirchgasse
    Kirchstraße
    Klinkeshöfchen
    Kügelgasse
    Langesthal
    Lascheterweg
    Limburgerweg
    Lindenweg
    Lothringerweg
    Malmedyer Straße
    Maria-Theresia-Straße
    Marktplatz
    Monschauer Straße
    Mühlenweg
    Neustraße
    Nikolausfeld
    Nispert
    Noereth
    Obere Ibern
    Obere Rottergasse
    Oestraße
    Olengraben
    Panorama
    Paveestraße
    Peter-Becker-Str.
    Rosenweg
    Rot-Kreuz-Str.
    Rotenberg
    Rotenbergplatz
    Schilsweg
    Schlüsselhof
    Schnellewindgasse
    Schönefeld
    Schorberg
    Schulstraße
    Selterschlag
    Simarstraße
    Steinroth
    Stendrich
    Stockbergerweg
    Stockem
    Theodor-Mooren-Str.
    Untere Ibern
    Vervierser Straße
    Vossengasse
    Voulfeld
    Werthplatz
    Weserstraße
    """
    
    streets_of_eupen = [ line for line in s.splitlines() if len(line.strip()) > 0 ]
    
    i = 0
    nr = 1
    for p in contacts.Person.objects.filter(city__exact='Eupen'):
        setattr(p,'addr1',streets_of_eupen[i] + " " + str(nr))
        p.save()
        nr += 1
        if i < len(streets_of_eupen) : 
            i += 1
        else:
            i = 0
        
        
