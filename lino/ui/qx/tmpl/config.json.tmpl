#raw    
{
  "name"    : "lino",

  "include" :
  [
    {
      "path" : "${QOOXDOO_PATH}/tool/data/config/application.json"
    }
  ],

  "export" :
  [
    "api",
    "api-data",
    "build",
    "clean",
    "distclean",
    "fix",
    "info",
    "inspector",
    "lint",
    "migration",
    "pretty",
    "profiling",
    "source",
    "source-all",
    "simulation-build",
    "simulation-run",
    "test",
    "test-source",
    "translation"
  ],
  
  "default-job" : "source",
  

  "let" :
  {
    // "MEDIA_URL"    : "/media/qooxdoo/lino_apps/igen/build/",
    // "MEDIA_URL"    : "",
    "APPLICATION"  : "lino",
#end raw    
    "MEDIA_URL"    : "$settings.LINO.qooxdoo_prefix",
#if False and $settings.DEBUG
    "OPTIMIZE"  : [],
#end if
    "QOOXDOO_PATH" : "$settings.QOOXDOO_PATH",
#raw    
    "QXTHEME"      : "lino.theme.Theme",
    "API_EXCLUDE"  : [
      "qx.test.*", 
      "${APPLICATION}.theme.*", 
      "${APPLICATION}.test.*", 
      "${APPLICATION}.simulation.*"
    ],
#end raw    
    "LOCALES"      : $py2js([lng[0] for lng in $settings.LANGUAGES]),
#raw    
    "CACHE"        : "${TMPDIR}/cache",
    "ROOT"         : "."
  }
  ,"jobs" :
  {
    // Uncomment the following entry to add a contrib or library to your
    // project; make sure to adapt the path to the Manifest.json; if you are
    // using a contrib: library, it will be downloaded into the path specified
    // by the 'cache/downloads' config key
    // "libraries" : 
    // {
    // "library" :
    //   [
    //     {
    //       "manifest" : "contrib://SkeletonApplication/trunk/Manifest.json"
    //     }
    //   ]
    // },
    "build-script" :
    {
#end raw    
#if $settings.DEBUG and False
      "variants" : {
         "=qx.debug" : [ "on" ]
      },
#end if
#raw    
      "compile-options" : 
      {
        "uris" : {
          "script" : "${MEDIA_URL}script",
          "resource" : "${MEDIA_URL}resource"
        } 
        // , "code" : {
        //   "format" : false
        // } 
      }
    },
    "source-script" :
    {
      "compile-options" : 
      {
        // "uris" : {
        //   "script" : "${MEDIA_URL}script",
        //   "resource" : "${MEDIA_URL}resource"
        // } 
        // , "code" : {
        //   "format" : false
        // } 
      }
    }
  }
}
#end raw    
