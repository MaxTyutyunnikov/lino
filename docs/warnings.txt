T:\hgwork\lino\docs\blog\2012\0507.rst:13: (ERROR/3) Unknown interpreted text role "modmeth".
T:\hgwork\lino\docs\igen\index.rst:11: (WARNING/2) toctree contains reference to nonexisting document u'igen/appdocs/index'
T:\hgwork\lino\docs\ref\model_methods.rst:4: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: _lino_preferred_width

    Used to set an explicit default `preferred_width` (in characters)
    for ForeignKey fields to this model.
    If not specified, the default default `preferred_width`
    for ForeignKey fields is *20*.
T:\hgwork\lino\docs\ref\model_methods.rst:11: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: _lino_default_table

    Used internally. Lino chooses during the kernel startup, for each model,
    one of the discovered Table subclasses as the "default table".
T:\hgwork\lino\docs\ref\model_methods.rst:16: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: allow_cascaded_delete

    Lino, like Django, by default forbids to delete an object that is
    referenced by other objects.

    Set this to `True` on models whose objects should get automatically
    deleted if a related object gets deleted.
    Example: Lino should not refuse to delete
    a Mail just because it has some Recipient.
    When deleting a Mail, Lino should also delete its Recipients.
    That's why :class:`lino.modlib.mails.models.Recipient`
    has ``allow_cascaded_delete = True``.

    Other examples of such models are
    :class:`lino.apps.pcsw.models.PersonProperty`
    and
    :class:`lino.apps.pcsw.models.LanguageKnowledge`.
T:\hgwork\lino\docs\ref\model_methods.rst:36: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: disabled_fields

    return a list of names of fields that should be disabled (not editable)
    for this record.

    Example::

      def disabled_fields(self,request):
          if self.user == request.user: return []
          df = ['field1']
          if self.foo:
            df.append('field2')
          return df
T:\hgwork\lino\docs\ref\model_methods.rst:50: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: disable_delete

    Hook to decide whether a given record may be deleted.
    Return a non-empty string with a message that explains why this record cannot be deleted.

    Example::

      def disable_delete(self,request):
          if self.is_imported:
              return _("Cannot delete imported records.")
T:\hgwork\lino\docs\ref\model_methods.rst:63: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: disable_editing

  ``disable_editing(self,request)``
      Return `True` if the whole record should be read-only.
T:\hgwork\lino\docs\ref\model_methods.rst:69: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: FOO_choices

  Return a queryset or list of allowed choices for field FOO.
  Must be decorated by a :func:`lino.utils.choosers.chooser`.
  Example of a context-sensitive chooser method::


      country = models.ForeignKey("countries.Country",blank=True,null=True,
          verbose_name=_("Country"))
      city = models.ForeignKey('countries.City',blank=True,null=True,
          verbose_name=_('City'))

      @chooser()
      def city_choices(cls,country):
          if country is not None:
              return country.city_set.order_by('name')
          return cls.city.field.rel.to.objects.order_by('name')
T:\hgwork\lino\docs\ref\model_methods.rst:89: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: FOO_changed

    Called when field FOO of an instance of this model has been modified through the user interface.
    Example::

      def city_changed(self,oldvalue):
          print "City changed from %s to %s!" % (oldvalue,self.city)
T:\hgwork\lino\docs\ref\model_methods.rst:98: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: get_queryset

    Return a customized default queryset

    Example::

      def get_queryset(self):
          return self.model.objects.select_related('country','city','coach1','coach2','nationality')
T:\hgwork\lino\docs\ref\model_methods.rst:108: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: data_control

  Used by :class:`lino.models.DataControlListing`.

  Example::

      def data_control(self):
T:\hgwork\lino\docs\ref\model_methods.rst:117: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: on_user_change

  Called when a record has been modified through the user interface.

  Example::

    def on_user_change(self,request):
T:\hgwork\lino\docs\ref\model_methods.rst:126: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: save_auto_tasks

  Example::

    def save_auto_tasks(self):
T:\hgwork\lino\docs\ref\model_methods.rst:133: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: setup_report

  Example::

      @classmethod
      def setup_report(model,rpt):
T:\hgwork\lino\docs\ref\model_methods.rst:140: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: summary_row

  Return a HTML fragment that describes this record in a
  :func:`lino.core.tables.summary`.

  Example::

    def summary_row(self,ui,rr,**kw):
        s = ui.href_to(self)
        if settings.LINO.projects_model:
            if self.project and not reports.has_fk(rr,'project'):
                s += " (" + ui.href_to(self.project) + ")"
        return s
T:\hgwork\lino\docs\ref\model_methods.rst:156: (ERROR/3) Unknown directive type "modmeth".

.. modmeth:: update_owned_task

  Example::

    def update_owned_task(self,task):
        task.person = self
T:\hgwork\lino\docs\autodoc\lino.modlib.households.rst:: WARNING: document isn't included in any toctree
T:\hgwork\lino\docs\casts\lino_intro.rst:: WARNING: document isn't included in any toctree
T:\hgwork\lino\docs\autodoc\index.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\autodoc\index.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\autodoc\lino.core.rst:9: WARNING: py:mod reference target not found: actors
T:\hgwork\lino\docs\autodoc\lino.core.rst:171: WARNING: py:class reference target not found: lino.apps.pcsw.model.Home
T:\hgwork\lino\docs\autodoc\lino.core.rst:180: WARNING: py:class reference target not found: lino.apps.pcsw.models.Home
T:\hgwork\lino\docs\autodoc\lino.core.rst:188: WARNING: py:attr reference target not found: filter
T:\hgwork\lino\docs\autodoc\lino.core.rst:271: WARNING: py:class reference target not found: type
T:\hgwork\lino\docs\autodoc\lino.core.rst:17: WARNING: py:mod reference target not found: coretools
T:\hgwork\lino\docs\autodoc\lino.core.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\autodoc\lino.ui.rst:4: WARNING: py:mod reference target not found: lino.ui.extjs
T:\hgwork\lino\docs\autodoc\lino.ui.rst:17: WARNING: py:mod reference target not found: base
T:\hgwork\lino\docs\autodoc\lino.ui.rst:17: WARNING: py:class reference target not found: object
T:\hgwork\lino\docs\autodoc\lino.ui.rst:25: WARNING: py:mod reference target not found: requests
T:\hgwork\lino\docs\autodoc\lino.ui.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:9: WARNING: py:mod reference target not found: urls
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:17: WARNING: py:mod reference target not found: ext_elems
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:68: WARNING: py:class reference target not found: lino.utils.jsgen.Component
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:129: WARNING: py:class reference target not found: lino.utils.jsgen.Component
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:407: WARNING: py:class reference target not found: lino.utils.jsgen.Component
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:494: WARNING: py:class reference target not found: lino.utils.jsgen.Component
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:521: WARNING: py:class reference target not found: lino.utils.jsgen.Component
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:999: WARNING: py:class reference target not found: lino.utils.jsgen.Component
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:1031: WARNING: py:class reference target not found: lino.utils.jsgen.Component
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:26: WARNING: py:mod reference target not found: ext_ui
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:103: WARNING: py:class reference target not found: lino.core.table.TableRequest
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:275: WARNING: term not in glossary: dtl2py
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:345: WARNING: py:class reference target not found: object
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:361: WARNING: py:class reference target not found: lino.core.table.TableRequest
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:374: WARNING: py:class reference target not found: lino.core.table.TableRequest
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:388: WARNING: py:class reference target not found: django.http.HttpResponse
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:429: WARNING: unknown document: /blog/2010/0716
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:429: WARNING: unknown document: /blog/2010/0721
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:429: WARNING: unknown document: /blog/2010/1116
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:429: WARNING: unknown document: /blog/2010/1207
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:35: WARNING: py:mod reference target not found: ext_store
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:142: WARNING: unknown document: /blog/2010/0803
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:270: WARNING: py:class reference target not found: object
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:430: WARNING: py:class reference target not found: object
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:475: WARNING: py:attr reference target not found: Store.pk_index
T:\hgwork\lino\docs\autodoc\lino.ui.extjs3.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\autodoc\lino.utils.appy_pod.rst:1: WARNING: py:mod reference target not found: appy_pod
T:\hgwork\lino\docs\autodoc\lino.utils.appy_pod.rst:18: WARNING: py:class reference target not found: appy.pod.renderer.Renderer
T:\hgwork\lino\docs\autodoc\lino.utils.appy_pod.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\autodoc\lino.utils.mti.rst:13: WARNING: py:class reference target not found: django.db.models.deletion.Collector
T:\hgwork\lino\docs\autodoc\lino.utils.mti.rst:44: WARNING: py:class reference target not found: django.db.models.base.Model
T:\hgwork\lino\docs\autodoc\lino.utils.mti.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\blog\2012\0505.rst:6: WARNING: py:mod reference target not found: lino.modlib.families
T:\hgwork\lino\docs\blog\2012\0505.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\blog\2012\0507.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\blog\2012\index.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\demos.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\dev\index.rst:24: WARNING: py:class reference target not found: lino.reports.Report
T:\hgwork\lino\docs\dev\index.rst:34: WARNING: xfile reference target not found: lino_settings.py
T:\hgwork\lino\docs\dev\index.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\igen\index.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\index.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\ref\index.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\ref\model_methods.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\genindex.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\py-modindex.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
T:\hgwork\lino\docs\search.rst:: WARNING: toctree contains reference to nonexisting document 'autodoc/lino.modlib.families'
