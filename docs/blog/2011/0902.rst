20110902
========

:mod:`lino.apps.igen` was broken after :doc:`/tickets/48`.
Started to repair it.

Added `related_name` 
to :attr:`lino.mixins.AutoUser.user` to avoid name clashes in 
:class:`lino.modlib.sales.models.SalesDocument`

New function :func:`lino.tools.makedirs_if_missing`.

Check-in 20110902.

Solved some problems with docs.

Check-in 20110902b.


TODO: 
It seems that :func:`lino.reports.inject_field` 
causes problems when the modified model has subclasses.
Subclasses will have only some part of the injected field's definition, 
causing Django to get confused::

  Traceback (most recent call last):
    File "t:\hgwork\lino\lino\utils\dpy.py", line 284, in try_save
      obj.save(*args,**kw)
    File "t:\hgwork\lino\lino\modlib\contacts\models.py", line 177, in save
      super(Contact,self).save(*args,**kw)
    File "l:\snapshots\django\django\db\models\base.py", line 464, in save
      self.save_base(using=using, force_insert=force_insert, force_update=force_update)
    File "l:\snapshots\django\django\db\models\base.py", line 508, in save_base
      self.save_base(cls=parent, origin=org, using=using)
    File "l:\snapshots\django\django\db\models\base.py", line 550, in save_base
      for f in meta.local_fields]
    File "l:\snapshots\django\django\db\models\fields\__init__.py", line 257, in pre_save
      return getattr(model_instance, self.attname)
  AttributeError: 'User' object has no attribute 'payment_term_id'

