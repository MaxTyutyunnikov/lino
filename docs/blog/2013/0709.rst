================================
20130709 (Tuesday, 09 July 2013)
================================

Endspurt vor eventuellem Release Lino-Welfare 1.1.8
---------------------------------------------------

- Added template file `lino_welfare/config/notes/Note/cv.odt`

- Fixed a test suite failure related to the `use_davlink` setting::

    $ python setup.py test -s tests.DocsTests.test_cbss
    File "docs/tested/cbss.rst", line 43, in cbss.rst
    Failed example:
        pprint(ses.run(obj.do_print)) #doctest: +NORMALIZE_WHITESPACE
    Exception raised:
        Traceback (most recent call last):
          File "/usr/lib/python2.7/doctest.py", line 1289, in __run
            compileflags, 1) in test.globs
          File "<doctest cbss.rst[6]>", line 1, in <module>
            pprint(ses.run(obj.do_print)) #doctest: +NORMALIZE_WHITESPACE
          File "/home/luc/hgwork/lino/lino/core/requests.py", line 294, in run
            return ia.run_from_session(self,*args,**kw)
          File "/home/luc/hgwork/lino/lino/core/actions.py", line 240, in run_from_session
            return self.bound_action.action.run_from_code(self.instance,ar)
          File "/home/luc/hgwork/lino/lino/core/actions.py", line 614, in run_from_code
            return self.run_from_ui(obj,ar,**kw)
          File "/home/luc/hgwork/lino/lino/mixins/printable.py", line 624, in run_from_ui
            url = ar.request.build_absolute_uri(url)
        AttributeError: 'NoneType' object has no attribute 'build_absolute_uri'


- In :class:`djangosite.utils.djangotest.TestCase`, added 
  new attribute 
  :attr:`override_djangosite_settings <djangosite.utils.djangotest.TestCase.override_djangosite_settings>`
  and removed 
  attribute `never_build_site_cache` which is no longer relevant.


Lino and  Django 1.6b1
----------------------

During my holidays 
`Django 1.6 beta 1 has been released
<https://www.djangoproject.com/weblog/2013/jun/28/django-16-beta-1-released/>`_.
Time to test how Lino likes it.
I expect problems with the :mod:`lino.utils.mti` module.

How to install it::

  $ pip uninstall Django
  $ pip install -e git+https://github.com/django/django.git@1.6b1#egg=django

The Lino test suite revealed that there were still some 
`manage.py` files containing the deprecated `execute_manager` 
hanging around.

TODO: :mod:`lino.core.inject` seems to have problems. 
Which is not too surprising as it uses some subtle but undocumented hacks.
Will have a closer look at this when a first release will be 
visible on PyPI.

App inheritance
---------------

Added a new :mod:`lino.modlib.auto.sales` which 
extends :mod:`lino.modlib.sales` and
is a next example of what I'd call "app inheritance".

It works basically like :mod:`lino_faggio.contacts`
which extends :mod:`lino.modlib.contacts` (see :blogref:`20130607`).

This time there was a new challenge: how can I say that I want 
to "inherit" the document template for Invoices?
The answer is inspired by a technique to extend the Pythonpath:
simply add a file 
:srcref:`config.pth <lino/modlib/auto/sales/config.pth>`
(the name must end with :file:`.pth`) to the app's directory 
(i.e. the directory which contains the :file:`models.py` file).
This file should contain one line for each additional 
`config` dir to add.


Lino-Faggio continued
---------------------

- `lino.modlib.cal.Event` and `lino.modlib.cal.Room` are now 
  overridable.
  
- :mod:`lino_faggio` uses this to make Events invoiceable
- cal.Room is no longer a ContactRelated by default because many 
  applications don't need this. :mod:`lino_faggio` 
  overrides it to make it ContactRelated.
  
- :mod:`lino_faggio` now also adds new fields 
  `Event.organizer`
  `cal.Room.tariff`

