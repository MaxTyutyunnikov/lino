===================================
20130829 (Thursday, 29 August 2013)
===================================

Appointments and prompt events
------------------------------

Worked on the calendar and reception modules. 

- In `Events.parameters` replaced the "unclear" checkbox by 
  an `observed_event` combobox which classifies calendar events 
  in either "pending" (i.e. in a state which is not fixed) 
  or "okay" (i.e. in a state which *is* fixed).
  But afterwards I removed the MyUnclearEvents table because no user has 
  ever asked for this.
  
- Added new filter parameters `calendar` and `show_appointments`.

The main reason was that users don't want to see "prompt events" in 
their MyEvents table of the welcome screen.

How to represent "visits" (or better "prompt events")?
They *are* calendar events whose guest(s) must be received 
like the guest(s) of any appointment.

Until now I used a special EventState "visit" which was neither 
pending nor okay. I thought that this is okay because visits are 
created on the fly and do not participate in the standard 
calendar workflow.


Permalink when session is not authenticated
-------------------------------------------

Requesting a permalink 
(like http://127.0.0.1:8000/api/users/Users)
when the session is not authenticated 
(e.g. because the server did an initdb_demo meanwhile)
now causes the login window to pop up and to automatically 
reload the permalink upon successful login.

This is convenient in certain development phases,
but also interesting for writing documentation 
with permalinks to the public online demos.
For example I can write instructions like the following:

  Open :menuselection:`Configure --> System --> Users`
  (or click `here <http://welfare-demo.lino-framework.org/api/users/Users>`_
  and log in as demo user "robin" with password "1234"),
  then bla bla bla...


- Added `on_login` parameter to `Lino.show_login_window`.

- Removed one `get_view_permission` test in views.py 
  which raised a PermissionDenied 
  because that would redirect to the 404 template.
  We don't want that yet here.
  If the login fails or the user has no right to see that table, 
  then the permalink will simply render an empty screen.


