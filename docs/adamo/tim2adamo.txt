===================
Using TIM and Adamo
===================

blabla bla blabla.
blabla bla blabla.


	>>> from lino.adamo.dbds.sqlite_dbd import Connection
	>>> conn = Connection(filename=None)
	>>> from lino.schemas.sprl.database import SprlDatabase
	>>> db = SprlDatabase(conn,label="Lucs Heimatseite")
	>>> db.startup(verbose=False)
	>>> db.createTables()
	CREATE TABLE LANG (
		 id CHAR(3),
		 name VARCHAR(50),
		 PRIMARY KEY (id)
	);
	CREATE TABLE PARTNERS (
		 id BIGINT,
		 lang_id CHAR(3),
		 org_id BIGINT,
		 person_id BIGINT,
		 name VARCHAR(50),
		 PRIMARY KEY (id)
	);
	CREATE TABLE PERS2PERS (
		 p_id BIGINT,
		 c_id BIGINT,
		 id BIGINT,
		 PRIMARY KEY (p_id, c_id)
	);
	CREATE TABLE PUBTYPES (
		 id VARCHAR(50),
		 pubRefLabel VARCHAR(50),
		 typeRefPrefix VARCHAR(50),
		 name VARCHAR(50),
		 PRIMARY KEY (id)
	);
	CREATE TABLE INVOICELINES (
		 invoice_jnl_id CHAR(3),
		 invoice_seq BIGINT,
		 line BIGINT,
		 product_id BIGINT,
		 remark VARCHAR(50),
		 qty BIGINT,
		 unitPrice BIGINT,
		 PRIMARY KEY (invoice_jnl_id, invoice_seq, line)
	);
	CREATE TABLE ORG2PERS (
		 p_id BIGINT,
		 c_id BIGINT,
		 note VARCHAR(50),
		 id BIGINT,
		 PRIMARY KEY (p_id, c_id)
	);
	CREATE TABLE QUOTES (
		 id BIGINT,
		 body TEXT,
		 lang_id CHAR(3),
		 author_id BIGINT,
		 abstract TEXT,
		 title VARCHAR(50),
		 PRIMARY KEY (id)
	);
	CREATE TABLE INVOICES (
		 jnl_id CHAR(3),
		 seq BIGINT,
		 remark VARCHAR(50),
		 zziel DATE,
		 inverted BIGINT,
		 amount BIGINT,
		 closed BIGINT,
		 date DATE,
		 partner_id BIGINT,
		 PRIMARY KEY (jnl_id, seq)
	);
	CREATE TABLE ORG2ORG (
		 p_id BIGINT,
		 c_id BIGINT,
		 id BIGINT,
		 PRIMARY KEY (p_id, c_id)
	);
	CREATE TABLE PAGE2PAGE (
		 p_id BIGINT,
		 c_id BIGINT,
		 seq BIGINT,
		 PRIMARY KEY (p_id, c_id)
	);
	CREATE TABLE NATIONS (
		 id CHAR(2),
		 name VARCHAR(50),
		 PRIMARY KEY (id)
	);
	CREATE TABLE BOOKINGS (
		 invoice_jnl_id CHAR(3),
		 invoice_seq BIGINT,
		 seq BIGINT,
		 dc BIGINT,
		 amount BIGINT,
		 date DATE,
		 partner_id BIGINT,
		 PRIMARY KEY (invoice_jnl_id, invoice_seq, seq)
	);
	CREATE TABLE PERSONS (
		 id BIGINT,
		 box VARCHAR(50),
		 city_nation_id CHAR(2),
		 city_id BIGINT,
		 name VARCHAR(50),
		 zip VARCHAR(50),
		 title VARCHAR(50),
		 house BIGINT,
		 phone VARCHAR(50),
		 street VARCHAR(50),
		 fname VARCHAR(50),
		 born DATE,
		 nation_id CHAR(2),
		 email VARCHAR(50),
		 died DATE,
		 PRIMARY KEY (id)
	);
	CREATE TABLE PRODUCTS (
		 id BIGINT,
		 price BIGINT,
		 name VARCHAR(50),
		 PRIMARY KEY (id)
	);
	CREATE TABLE PUBLICATIONS (
		 id BIGINT,
		 body TEXT,
		 typeRef VARCHAR(50),
		 subtitle VARCHAR(50),
		 title VARCHAR(50),
		 type_id VARCHAR(50),
		 abstract TEXT,
		 year BIGINT,
		 treeSeq BIGINT,
		 super_id BIGINT,
		 PRIMARY KEY (id)
	);
	CREATE TABLE YEARS (
		 id BIGINT,
		 name VARCHAR(50),
		 PRIMARY KEY (id)
	);
	CREATE TABLE ORGS (
		 id BIGINT,
		 box VARCHAR(50),
		 city_nation_id CHAR(2),
		 city_id BIGINT,
		 street VARCHAR(50),
		 name VARCHAR(50),
		 zip VARCHAR(50),
		 house BIGINT,
		 nation_id CHAR(2),
		 phone VARCHAR(50),
		 email VARCHAR(50),
		 PRIMARY KEY (id)
	);
	CREATE TABLE CITIES (
		 nation_id CHAR(2),
		 id BIGINT,
		 inhabitants BIGINT,
		 name VARCHAR(50),
		 PRIMARY KEY (nation_id, id)
	);
	CREATE TABLE JOURNALS (
		 id CHAR(3),
		 tableName VARCHAR(50),
		 name VARCHAR(50),
		 PRIMARY KEY (id)
	);
	CREATE TABLE PAGES (
		 id BIGINT,
		 body TEXT,
		 lang_id CHAR(3),
		 author_id BIGINT,
		 created DATE,
		 abstract TEXT,
		 title VARCHAR(50),
		 modified DATE,
		 PRIMARY KEY (id)
	);
	CREATE TABLE PUB2PERS (
		 p_id BIGINT,
		 c_id BIGINT,
		 id BIGINT,
		 PRIMARY KEY (p_id, c_id)
	);


blabla bla blabla.
blabla bla blabla.
	
