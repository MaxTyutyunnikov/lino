#encoding UTF-8
/* ************************************************************************

#asset(lino/*)

************************************************************************ */

/**
 * This is the main application class of your custom application "lino"
 */
qx.Class.define("$class_name",
{
  //~ caption: "St√§dte",
  extend : lino.TableWindow,
  //~ construct : function() {
    //~ this.base(arguments, this.caption);
  //~ },
  

  members : {
    content_type : $(rh.content_type),
    before_row_edit : function(record){}, 
    createTable : function() {
      var tm = new lino.RemoteTableModel(this,
        '$(rh.get_actor_url())',
        $(py2js([col.editor.list_index for col in $rh.get_columns()]))
      );
      //~ tm.setColumns(
        //~ $(py2js([col.label for col in $rh.get_columns()])),
        //~ $(py2js([col.name for col in $rh.get_columns()]))
      //~ ); // columnNameArr, columnIdArr
      tm.setColumns(
        $(py2js([col.label for col in $rh.get_columns()]))
      ); // columnNameArr, columnIdArr
      //~ tm.setColumnSortable(0,true);
      // $(py2js([col.editor.list_index for col in $rh.get_columns()]))
      //~ tm.setColumnEditable(0,true);
      // todo:
      // filter ? 
      // width ?
      // renderer
      // editor
      // hidden
      // lino.CountriesCitiesInsert
      
      //~ var custom = {
        //~ tableColumnModel : function(obj) { 
          //~ var cm = new qx.ui.table.columnmodel.Basic(obj);
          //~ return cm;
        //~ }
      //~ };      
      //~ var table = new qx.ui.table.Table(tm,custom);
      var table = new qx.ui.table.Table(tm);
      var cm = table.getTableColumnModel();
#for $col in $rh.get_columns()
    #if isinstance($col.field,$models.ForeignKey)
      cm.setDataCellRenderer($col.index,new lino.ForeignKeyCellRenderer($col.editor.list_index));
    #elif isinstance($col.field,$models.BooleanField)
      cm.setDataCellRenderer($col.index,new qx.ui.table.cellrenderer.Boolean());
    #end if
#end for
      return table;
    },
    setupToolbar: function(bar)
    {
#set $dtl = $rh.report.get_action('detail')
#if $dtl      
      var btn = new qx.ui.toolbar.Button($py2js($dtl.label));
      btn.addListener('execute',function(){
        //~ this.showWindow(lino.CountriesCitiesDetail);
        console.log("execute : $a2class($dtl)");
        this.showWindow(new $a2class($dtl)());
      }, this);
      bar.add(btn);
#end if      
    //~ "ls_bbar_actions": [ 
      //~ { "text": "Detail", "panel_btn_handler": Lino.show_detail_handler }, 
      //~ { "text": "Einf\u00fcgen", "must_save": true, "panel_btn_handler": function(panel){Lino.show_insert(panel)} }, 
      //~ { "text": "L\u00f6schen", "panel_btn_handler": Lino.delete_selected } 
    //~ ], 

    }
  }
});